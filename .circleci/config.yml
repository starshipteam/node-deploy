version: 2.1
commands:
  push-image:
    description: 'push docker-image to registry'
    parameters:
      image-name:
        type: string
      image-url:
        type: string
    steps:
      - run:
          name: push << parameters.image-url >>
          command: |
            docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            docker tag << parameters.image-url >> << parameters.image-url >>:$(cat ./<< parameters.image-name >>/version)
            docker push << parameters.image-url >>:$(cat ./<< parameters.image-name >>/version)
            docker push << parameters.image-url >>

jobs:
  node-build-image:
    working_directory: ~/project
    docker:
      - image: circleci/buildpack-deps:stable

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker-image
          command: docker build -t starshipteam/node-deploy-test ./node-deploy

  node-deploy-image:
    working_directory: ~/project
    docker:
      - image: circleci/buildpack-deps:stable

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker-image
          command: docker build -t starshipteam/node-deploy ./node-deploy
      - push-image:
          image-name: node-deploy
          image-url: starshipteam/node-deploy

  golang-build-image:
    working_directory: ~/project
    docker:
      - image: circleci/buildpack-deps:stable

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker-image
          command: docker build -t starshipteam/golang-deploy-test ./golang-deploy

  golang-deploy-image:
    working_directory: ~/project
    docker:
      - image: circleci/buildpack-deps:stable

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker-image
          command: docker build -t starshipteam/golang-deploy ./golang-deploy
      - push-image:
          image-name: golang-deploy
          image-url: starshipteam/golang-deploy

workflows:
  build:
    jobs:
      - node-build-image:
          filters:
            branches:
              only:
                - /^feature\/.*/
                - /^hotfix\/.*/
      - golang-build-image:
          filters:
            branches:
              only:
                - /^feature\/.*/
                - /^hotfix\/.*/
  build_and_push:
    jobs:
      - node-deploy-image:
          filters:
            branches:
              only:
                - master
      - golang-deploy-image:
          filters:
            branches:
              only:
                - master
